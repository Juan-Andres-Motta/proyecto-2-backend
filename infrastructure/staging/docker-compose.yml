networks:
  microservices:
    driver: bridge

services:
  bff:
    image: ${ECR_BFF_REPO}:latest
    ports:
      - "8000:8000"
    env_file:
      - .env.staging
      - ../common/.env.common
    environment:
      - CATALOG_URL=http://catalog:8000/catalog
      - CLIENT_URL=http://client:8000/client
      - DELIVERY_URL=http://delivery:8000/delivery
      - INVENTORY_URL=http://inventory:8000/inventory
      - ORDER_URL=http://order:8000/order
      - SELLER_URL=http://seller:8000/seller
      - SQS_QUEUE_URL=${SQS_QUEUE_URL}
      - SQS_REGION=${SQS_REGION}
      - SQS_REPORTS_QUEUE_URL=${SQS_REPORTS_QUEUE_URL}
      - AWS_REGION=${AWS_REGION}
    depends_on:
      - catalog
      - client
      - delivery
      - inventory
      - order
      - seller
    networks:
      - microservices
    restart: unless-stopped

  catalog:
    image: ${ECR_CATALOG_REPO}:latest
    ports:
      - "8001:8000"
    env_file:
      - .env.staging
      - ../common/.env.common
    environment:
      - DATABASE_URL=postgresql://postgres:password@shared-db:5432/medisupply
    depends_on:
      - shared-db
    networks:
      - microservices
    restart: unless-stopped

  client:
    image: ${ECR_CLIENT_REPO}:latest
    ports:
      - "8002:8000"
    env_file:
      - .env.staging
      - ../common/.env.common
    environment:
      - DATABASE_URL=postgresql://postgres:password@shared-db:5432/medisupply
    depends_on:
      - shared-db
    networks:
      - microservices
    restart: unless-stopped

  delivery:
    image: ${ECR_DELIVERY_REPO}:latest
    ports:
      - "8003:8000"
    env_file:
      - .env.staging
      - ../common/.env.common
    environment:
      - DATABASE_URL=postgresql://postgres:password@shared-db:5432/medisupply
    depends_on:
      - shared-db
    networks:
      - microservices
    restart: unless-stopped

  inventory:
    image: ${ECR_INVENTORY_REPO}:latest
    ports:
      - "8004:8000"
    env_file:
      - .env.staging
      - ../common/.env.common
    environment:
      - DATABASE_URL=postgresql://postgres:password@shared-db:5432/medisupply
      - AWS_REGION=${AWS_REGION}
      - S3_REPORTS_BUCKET=${S3_INVENTORY_REPORTS_BUCKET}
      - SQS_REPORTS_QUEUE_URL=${SQS_REPORTS_QUEUE_URL}
    depends_on:
      - shared-db
    networks:
      - microservices
    restart: unless-stopped

  order:
    image: ${ECR_ORDER_REPO}:latest
    ports:
      - "8005:8000"
    env_file:
      - .env.staging
      - ../common/.env.common
    environment:
      - DATABASE_URL=postgresql://postgres:password@shared-db:5432/medisupply
      - AWS_REGION=${AWS_REGION}
      - S3_REPORTS_BUCKET=${S3_ORDER_REPORTS_BUCKET}
      - SQS_REPORTS_QUEUE_URL=${SQS_REPORTS_QUEUE_URL}
    depends_on:
      - shared-db
    networks:
      - microservices
    restart: unless-stopped

  seller:
    image: ${ECR_SELLER_REPO}:latest
    ports:
      - "8006:8000"
    env_file:
      - .env.staging
      - ../common/.env.common
    environment:
      - DATABASE_URL=postgresql://postgres:password@shared-db:5432/medisupply
    depends_on:
      - shared-db
    networks:
      - microservices
    restart: unless-stopped

  shared-db:
    image: postgres:15
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=medisupply
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - shared-db-data:/var/lib/postgresql/data
    networks:
      - microservices
    restart: unless-stopped

volumes:
  shared-db-data:
