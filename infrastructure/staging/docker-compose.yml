version: '3.8'

networks:
  microservices:
    driver: bridge

services:
  bff:
    image: ${ECR_BFF_REPO}:latest
    ports:
      - "8000:8000"
    env_file:
      - .env.staging
      - ../common/.env.common
    environment:
      - CATALOG_URL=http://catalog:8000/catalog
      - CLIENT_URL=http://client:8000/client
      - DELIVERY_URL=http://delivery:8000/delivery
      - INVENTORY_URL=http://inventory:8000/inventory
      - ORDER_URL=http://order:8000/order
      - SELLER_URL=http://seller:8000/seller
    depends_on:
      - catalog
      - client
      - delivery
      - inventory
      - order
      - seller
    networks:
      - microservices
    restart: unless-stopped

  catalog:
    image: ${ECR_CATALOG_REPO}:latest
    ports:
      - "8001:8000"
    env_file:
      - .env.staging
      - ../common/.env.common
    environment:
      - DATABASE_URL=postgresql://postgres:password@catalog-db:5432/catalog
    depends_on:
      - catalog-db
    networks:
      - microservices
    restart: unless-stopped

  catalog-db:
    image: postgres:15
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=catalog
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - catalog-db-data:/var/lib/postgresql/data
    networks:
      - microservices
    restart: unless-stopped

  client:
    image: ${ECR_CLIENT_REPO}:latest
    ports:
      - "8002:8000"
    env_file:
      - .env.staging
      - ../common/.env.common
    environment:
      - DATABASE_URL=postgresql://postgres:password@client-db:5432/client
    depends_on:
      - client-db
    networks:
      - microservices
    restart: unless-stopped

  client-db:
    image: postgres:15
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_DB=client
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - client-db-data:/var/lib/postgresql/data
    networks:
      - microservices
    restart: unless-stopped

  delivery:
    image: ${ECR_DELIVERY_REPO}:latest
    ports:
      - "8003:8000"
    env_file:
      - .env.staging
      - ../common/.env.common
    environment:
      - DATABASE_URL=postgresql://postgres:password@delivery-db:5432/delivery
    depends_on:
      - delivery-db
    networks:
      - microservices
    restart: unless-stopped

  delivery-db:
    image: postgres:15
    ports:
      - "5434:5432"
    environment:
      - POSTGRES_DB=delivery
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - delivery-db-data:/var/lib/postgresql/data
    networks:
      - microservices
    restart: unless-stopped

  inventory:
    image: ${ECR_INVENTORY_REPO}:latest
    ports:
      - "8004:8000"
    env_file:
      - .env.staging
      - ../common/.env.common
    environment:
      - DATABASE_URL=postgresql://postgres:password@inventory-db:5432/inventory
    depends_on:
      - inventory-db
    networks:
      - microservices
    restart: unless-stopped

  inventory-db:
    image: postgres:15
    ports:
      - "5435:5432"
    environment:
      - POSTGRES_DB=inventory
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - inventory-db-data:/var/lib/postgresql/data
    networks:
      - microservices
    restart: unless-stopped

  order:
    image: ${ECR_ORDER_REPO}:latest
    ports:
      - "8005:8000"
    env_file:
      - .env.staging
      - ../common/.env.common
    environment:
      - DATABASE_URL=postgresql://postgres:password@order-db:5432/orderdb
    depends_on:
      - order-db
    networks:
      - microservices
    restart: unless-stopped

  order-db:
    image: postgres:15
    ports:
      - "5436:5432"
    environment:
      - POSTGRES_DB=orderdb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - order-db-data:/var/lib/postgresql/data
    networks:
      - microservices
    restart: unless-stopped

  seller:
    image: ${ECR_SELLER_REPO}:latest
    ports:
      - "8006:8000"
    env_file:
      - .env.staging
      - ../common/.env.common
    environment:
      - DATABASE_URL=postgresql://postgres:password@seller-db:5432/seller
    depends_on:
      - seller-db
    networks:
      - microservices
    restart: unless-stopped

  seller-db:
    image: postgres:15
    ports:
      - "5437:5432"
    environment:
      - POSTGRES_DB=seller
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - seller-db-data:/var/lib/postgresql/data
    networks:
      - microservices
    restart: unless-stopped

volumes:
  catalog-db-data:
  client-db-data:
  delivery-db-data:
  inventory-db-data:
  order-db-data:
  seller-db-data:
