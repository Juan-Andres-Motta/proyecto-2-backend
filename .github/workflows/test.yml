name: Test Services

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  detect-changes:
    name: Detect Changed Services
    runs-on: ubuntu-latest
    outputs:
      bff: ${{ steps.filter.outputs.bff }}
      catalog: ${{ steps.filter.outputs.catalog }}
      client: ${{ steps.filter.outputs.client }}
      delivery: ${{ steps.filter.outputs.delivery }}
      inventory: ${{ steps.filter.outputs.inventory }}
      order: ${{ steps.filter.outputs.order }}
      seller: ${{ steps.filter.outputs.seller }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check for changes
        uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            bff:
              - 'bff/**'
            catalog:
              - 'catalog/**'
            client:
              - 'client/**'
            delivery:
              - 'delivery/**'
            inventory:
              - 'inventory/**'
            order:
              - 'order/**'
            seller:
              - 'seller/**'

  test-bff:
    name: Test BFF Service
    needs: detect-changes
    if: needs.detect-changes.outputs.bff == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./bff
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: poetry install --no-interaction --no-ansi

      - name: Run tests with coverage
        run: poetry run pytest --cov=web --cov=common --cov=config --cov-report=xml --cov-report=term --cov-fail-under=70

      - name: Generate coverage comment
        if: github.event_name == 'pull_request'
        uses: py-cov-action/python-coverage-comment-action@v3
        with:
          GITHUB_TOKEN: ${{ github.token }}
          MINIMUM_GREEN: 70
          MINIMUM_ORANGE: 60
          COVERAGE_PATH: ./bff
          COMMENT_ARTIFACT_NAME: bff-coverage-comment
          COMMENT_FILENAME: bff-coverage.txt

  test-catalog:
    name: Test Catalog Service
    needs: detect-changes
    if: needs.detect-changes.outputs.catalog == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./catalog
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: poetry install --no-interaction --no-ansi

      - name: Run tests with coverage
        run: poetry run pytest --cov=src --cov-report=xml --cov-report=term --cov-fail-under=70

      - name: Generate coverage comment
        if: github.event_name == 'pull_request'
        uses: py-cov-action/python-coverage-comment-action@v3
        with:
          GITHUB_TOKEN: ${{ github.token }}
          MINIMUM_GREEN: 70
          MINIMUM_ORANGE: 60
          COVERAGE_PATH: ./catalog
          COMMENT_ARTIFACT_NAME: catalog-coverage-comment
          COMMENT_FILENAME: catalog-coverage.txt

  test-client:
    name: Test Client Service
    needs: detect-changes
    if: needs.detect-changes.outputs.client == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./client
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: poetry install --no-interaction --no-ansi

      - name: Run tests with coverage
        run: poetry run pytest --cov=src --cov-report=xml --cov-report=term --cov-fail-under=70

      - name: Generate coverage comment
        if: github.event_name == 'pull_request'
        uses: py-cov-action/python-coverage-comment-action@v3
        with:
          GITHUB_TOKEN: ${{ github.token }}
          MINIMUM_GREEN: 70
          MINIMUM_ORANGE: 60
          COVERAGE_PATH: ./client
          COMMENT_ARTIFACT_NAME: client-coverage-comment
          COMMENT_FILENAME: client-coverage.txt

  test-delivery:
    name: Test Delivery Service
    needs: detect-changes
    if: needs.detect-changes.outputs.delivery == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./delivery
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: poetry install --no-interaction --no-ansi

      - name: Run tests with coverage
        run: poetry run pytest --cov=src --cov-report=xml --cov-report=term --cov-fail-under=70

      - name: Generate coverage comment
        if: github.event_name == 'pull_request'
        uses: py-cov-action/python-coverage-comment-action@v3
        with:
          GITHUB_TOKEN: ${{ github.token }}
          MINIMUM_GREEN: 70
          MINIMUM_ORANGE: 60
          COVERAGE_PATH: ./delivery
          COMMENT_ARTIFACT_NAME: delivery-coverage-comment
          COMMENT_FILENAME: delivery-coverage.txt

  test-inventory:
    name: Test Inventory Service
    needs: detect-changes
    if: needs.detect-changes.outputs.inventory == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./inventory
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: poetry install --no-interaction --no-ansi

      - name: Run tests with coverage
        run: poetry run pytest --cov=src --cov-report=xml --cov-report=term --cov-fail-under=70

      - name: Generate coverage comment
        if: github.event_name == 'pull_request'
        uses: py-cov-action/python-coverage-comment-action@v3
        with:
          GITHUB_TOKEN: ${{ github.token }}
          MINIMUM_GREEN: 70
          MINIMUM_ORANGE: 60
          COVERAGE_PATH: ./inventory
          COMMENT_ARTIFACT_NAME: inventory-coverage-comment
          COMMENT_FILENAME: inventory-coverage.txt

  test-order:
    name: Test Order Service
    needs: detect-changes
    if: needs.detect-changes.outputs.order == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./order
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: poetry install --no-interaction --no-ansi

      - name: Run tests with coverage
        run: poetry run pytest --cov=src --cov-report=xml --cov-report=term --cov-fail-under=70

      - name: Generate coverage comment
        if: github.event_name == 'pull_request'
        uses: py-cov-action/python-coverage-comment-action@v3
        with:
          GITHUB_TOKEN: ${{ github.token }}
          MINIMUM_GREEN: 70
          MINIMUM_ORANGE: 60
          COVERAGE_PATH: ./order
          COMMENT_ARTIFACT_NAME: order-coverage-comment
          COMMENT_FILENAME: order-coverage.txt

  test-seller:
    name: Test Seller Service
    needs: detect-changes
    if: needs.detect-changes.outputs.seller == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./seller
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: poetry install --no-interaction --no-ansi

      - name: Run tests with coverage
        run: poetry run pytest --cov=src --cov-report=xml --cov-report=term --cov-fail-under=70

      - name: Generate coverage comment
        if: github.event_name == 'pull_request'
        uses: py-cov-action/python-coverage-comment-action@v3
        with:
          GITHUB_TOKEN: ${{ github.token }}
          MINIMUM_GREEN: 70
          MINIMUM_ORANGE: 60
          COVERAGE_PATH: ./seller
          COMMENT_ARTIFACT_NAME: seller-coverage-comment
          COMMENT_FILENAME: seller-coverage.txt
